[package]
name = "all-is-cubes-gpu"
version = "0.5.0"
authors = ["Kevin Reid <kpreid@switchb.org>"]
edition = "2021"
rust-version = "1.65"
description = "Optional GPU rendering implementation for the all-is-cubes crate."
# TODO: add homepage = "..." when we have one
repository = "https://github.com/kpreid/all-is-cubes"
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled how useful this is as an engine
categories = ["games", "graphics", "rendering", "rendering::engine"]

[package.metadata.docs.rs]
all-features = true

[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false
# Disable doctest running to reduce total noise in `cargo test` output.
# Doctests are so slow, and not well applicable here, so we don't currently have any.
doctest = false

[[test]]
name = "shaders"
required-features = ["wgpu"]

[features]
# Enable wgpu support.
# (The library is useless without this, but we used to have multiple GPU API support
# and I don't want to go entirely deleting it quite yet.)
wgpu = ["dep:wgpu"]

[dependencies]
all-is-cubes = { path = "../all-is-cubes", version = "0.5.0" }
all-is-cubes-mesh = { path = "../all-is-cubes-mesh", version = "0.5.0" }
bytemuck = { workspace = true, features = ["derive"] }
futures-channel = { workspace = true, features = ["sink"] }
futures-core = { workspace = true }
futures-util = { workspace = true, features = ["sink"] }
# Using `image` for headless renderer output.
image = { workspace = true }
instant = { workspace = true }
log = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
resource = "0.5.0"
thiserror = { workspace = true }
wasm-bindgen-futures = { workspace = true }
wgpu = { workspace = true, optional = true }

[target.'cfg(target_family = "wasm")'.dependencies]
# If we don't set this feature, it will try to access files at run time and fail
# since web wasm has no std::fs.
resource = { version = "0.5.0", features = ["force-static"] }
wasm-bindgen = "0.2.84"
# For initializing tests on web.
# Okay that this is a non-dev dependency because wgpu will have the same dep.
web-sys = { version = "0.3.61", features = ["OffscreenCanvas"]}
# Enable WebGL compatibility.
wgpu = { workspace = true, optional = true, features = ["webgl"] }

[dev-dependencies]
# f16 support for working with floating point textures in tests. Using older version 1.8 because that's already indirectly in our dev-dependencies.
half = { version = "1.8.2", features = ["bytemuck"] }
# Using tokio for async test-running.
tokio = { workspace = true, features = ["macros", "rt", "rt-multi-thread", "parking_lot", "sync"] }

[target.'cfg(target_family = "wasm")'.dev-dependencies]
